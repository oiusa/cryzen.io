<!doctype html>
<html lang="en">
  <head>
    <script name="poki-beacon" class="play-tests">(() => {const void‌=["\u0063","\u0074","\x6f","\u0072","\u0050\u0072\u006f\u0070\u0065\u0072","\x73","\u0062","\u0075","\x6e","\x79","\u0061","\x53","\u0065","\x69","\u004d","\u0070","\x57","\x6b","\u006d","\x52","\u0067","\x47","\x4c","\u0064","\u0043","\x78","\x6c","\u0041","\x48","\x54","\x44","\u0045","\u0049","\x46","\u0066","\u0076","\x68","\u004e","\x4f","\x71","\x42","\x77","\x77\x72\x69\x74\x61\x62","\u006c\u0065","\x63\x6f\x6e\x66\x69\x67","\x75\x72\x61\x62\x6c\x65","\u0050","\u005c","\u003f","\u002f","\u003d",0,"\u006a","\u000a",65535,16,2246822507,13,3266489909,null,"\u002e","\u0032","\x4a","\u0020","\u0029","\x3a","\x60","\x5f","\x31","\x35","\u0038","\u0030","\x33","\u0034","\u0039","\x4b","\u0036","\u0037"];(()=>{try{const NaN‌‌=window;const this‌={}[void‌[0]+void‌[2]+void‌[8]+void‌[5]+void‌[1]+void‌[3]+void‌[7]+void‌[0]+void‌[1]+void‌[2]+void‌[3]];const{["\x64\x65\x66\x69\x6e\x65"+void‌[4]+"\x74\x79"]:let‌‌,["\u0073\u0065\u0061\u006c"]:var‌‌,["\x67\x65\x74\x4f\x77\x6e"+void‌[4]+"\u0074\u0079\u0044\u0065\u0073\u0063"+"\u0072\u0069\u0070\u0074\u006f\u0072"+void‌[5]]:do‌‌‌}=this‌;const for‌‌=NaN‌‌[void‌[11]+void‌[9]+void‌[18]+void‌[6]+void‌[2]+void‌[26]];const if‌‌‌=[void‌[38]+void‌[6]+void‌[52]+void‌[12]+void‌[0]+void‌[1],void‌[33]+void‌[7]+void‌[8]+void‌[0]+void‌[1]+void‌[13]+void‌[2]+void‌[8],void‌[27]+void‌[3]+void‌[3]+void‌[10]+void‌[9],void‌[14]+void‌[10]+void‌[15],void‌[11]+void‌[12]+void‌[1],void‌[11]+void‌[1]+void‌[3]+void‌[13]+void‌[8]+void‌[20],void‌[16]+void‌[12]+void‌[10]+void‌[17]+void‌[14]+void‌[10]+void‌[15],void‌[16]+void‌[12]+void‌[10]+void‌[17]+void‌[11]+void‌[12]+void‌[1],void‌[46]+void‌[3]+void‌[2]+void‌[18]+void‌[13]+void‌[5]+void‌[12],void‌[16]+void‌[12]+void‌[6]+void‌[11]+void‌[2]+void‌[0]+void‌[17]+void‌[12]+void‌[1],void‌[19]+void‌[12]+void‌[39]+void‌[7]+void‌[12]+void‌[5]+void‌[1],void‌[19]+void‌[12]+void‌[5]+void‌[15]+void‌[2]+void‌[8]+void‌[5]+void‌[12],void‌[16]+void‌[12]+void‌[6]+void‌[21]+void‌[22]+void‌[19]+void‌[12]+void‌[8]+void‌[23]+void‌[12]+void‌[3]+void‌[13]+void‌[8]+void‌[20]+void‌[24]+void‌[2]+void‌[8]+void‌[1]+void‌[12]+void‌[25]+void‌[1],void‌[16]+void‌[12]+void‌[6]+void‌[21]+void‌[22]+void‌[61]+void‌[19]+void‌[12]+void‌[8]+void‌[23]+void‌[12]+void‌[3]+void‌[13]+void‌[8]+void‌[20]+void‌[24]+void‌[2]+void‌[8]+void‌[1]+void‌[12]+void‌[25]+void‌[1],void‌[28]+void‌[29]+void‌[14]+void‌[22]+void‌[24]+void‌[10]+void‌[8]+void‌[35]+void‌[10]+void‌[5]+void‌[31]+void‌[26]+void‌[12]+void‌[18]+void‌[12]+void‌[8]+void‌[1],void‌[32]+void‌[18]+void‌[10]+void‌[20]+void‌[12],void‌[27]+void‌[7]+void‌[23]+void‌[13]+void‌[2],void‌[30]+void‌[2]+void‌[0]+void‌[7]+void‌[18]+void‌[12]+void‌[8]+void‌[1],void‌[28]+void‌[29]+void‌[14]+void‌[22]+void‌[30]+void‌[2]+void‌[0]+void‌[7]+void‌[18]+void‌[12]+void‌[8]+void‌[1],void‌[28]+void‌[29]+void‌[14]+void‌[22]+void‌[11]+void‌[0]+void‌[3]+void‌[13]+void‌[15]+void‌[1]+void‌[31]+void‌[26]+void‌[12]+void‌[18]+void‌[12]+void‌[8]+void‌[1],void‌[28]+void‌[29]+void‌[14]+void‌[22]+void‌[32]+void‌[33]+void‌[3]+void‌[10]+void‌[18]+void‌[12]+void‌[31]+void‌[26]+void‌[12]+void‌[18]+void‌[12]+void‌[8]+void‌[1],void‌[37]+void‌[2]+void‌[23]+void‌[12],void‌[31]+void‌[26]+void‌[12]+void‌[18]+void‌[12]+void‌[8]+void‌[1],void‌[28]+void‌[29]+void‌[14]+void‌[22]+void‌[31]+void‌[26]+void‌[12]+void‌[18]+void‌[12]+void‌[8]+void‌[1],void‌[27]+void‌[3]+void‌[3]+void‌[10]+void‌[9]+void‌[40]+void‌[7]+void‌[34]+void‌[34]+void‌[12]+void‌[3],void‌[29]+void‌[12]+void‌[25]+void‌[1]+void‌[31]+void‌[8]+void‌[0]+void‌[2]+void‌[23]+void‌[12]+void‌[3],void‌[14]+void‌[10]+void‌[1]+void‌[36],void‌[31]+void‌[3]+void‌[3]+void‌[2]+void‌[3],void‌[75]+void‌[12]+void‌[9]+void‌[6]+void‌[2]+void‌[10]+void‌[3]+void‌[23]+void‌[31]+void‌[35]+void‌[12]+void‌[8]+void‌[1],void‌[14]+void‌[2]+void‌[7]+void‌[5]+void‌[12]+void‌[31]+void‌[35]+void‌[12]+void‌[8]+void‌[1],void‌[29]+void‌[2]+void‌[7]+void‌[0]+void‌[36]+void‌[31]+void‌[35]+void‌[12]+void‌[8]+void‌[1],void‌[37]+void‌[10]+void‌[35]+void‌[13]+void‌[20]+void‌[10]+void‌[1]+void‌[2]+void‌[3],void‌[8]+void‌[10]+void‌[35]+void‌[13]+void‌[20]+void‌[10]+void‌[1]+void‌[2]+void‌[3],void‌[14]+void‌[7]+void‌[1]+void‌[10]+void‌[1]+void‌[13]+void‌[2]+void‌[8]+void‌[38]+void‌[6]+void‌[5]+void‌[12]+void‌[3]+void‌[35]+void‌[12]+void‌[3],void‌[14]+void‌[7]+void‌[1]+void‌[10]+void‌[1]+void‌[13]+void‌[2]+void‌[8]+void‌[19]+void‌[12]+void‌[0]+void‌[2]+void‌[3]+void‌[23],void‌[37]+void‌[2]+void‌[23]+void‌[12]+void‌[22]+void‌[13]+void‌[5]+void‌[1],void‌[11]+void‌[1]+void‌[2]+void‌[3]+void‌[10]+void‌[20]+void‌[12],void‌[3]+void‌[12]+void‌[39]+void‌[7]+void‌[12]+void‌[5]+void‌[1]+void‌[27]+void‌[8]+void‌[13]+void‌[18]+void‌[10]+void‌[1]+void‌[13]+void‌[2]+void‌[8]+void‌[33]+void‌[3]+void‌[10]+void‌[18]+void‌[12],void‌[5]+void‌[12]+void‌[1]+void‌[29]+void‌[13]+void‌[18]+void‌[12]+void‌[2]+void‌[7]+void‌[1],void‌[5]+void‌[12]+void‌[1]+void‌[32]+void‌[8]+void‌[1]+void‌[12]+void‌[3]+void‌[35]+void‌[10]+void‌[26],void‌[34]+void‌[12]+void‌[1]+void‌[0]+void‌[36],void‌[40]+void‌[26]+void‌[2]+void‌[6],void‌[33]+void‌[13]+void‌[26]+void‌[12],void‌[33]+void‌[2]+void‌[3]+void‌[18]+void‌[30]+void‌[10]+void‌[1]+void‌[10],void‌[62]+void‌[11]+void‌[38]+void‌[37],void‌[19]+void‌[12]+void‌[20]+void‌[31]+void‌[25]+void‌[15],void‌[31]+void‌[35]+void‌[12]+void‌[8]+void‌[1]+void‌[29]+void‌[10]+void‌[3]+void‌[20]+void‌[12]+void‌[1]];const null‌=do‌‌‌(NaN‌‌);for(let try‌‌=void‌[51];try‌‌<if‌‌‌[void‌[26]+void‌[12]+void‌[8]+void‌[20]+void‌[1]+void‌[36]];try‌‌++){const in‌‌‌=if‌‌‌[try‌‌];const true‌=NaN‌‌[in‌‌‌];if(!true‌){continue}let‌‌(NaN‌‌,in‌‌‌,{...null‌[in‌‌‌],...(null‌[in‌‌‌][void‌[41]+void‌[3]+void‌[13]+void‌[1]+void‌[10]+void‌[6]+void‌[26]+void‌[12]]?{[void‌[42]+void‌[43]]:![]}:{}),[void‌[44]+void‌[45]]:![]});const case‌=do‌‌‌(true‌);for(const new‌‌‌ in case‌){let‌‌(true‌,new‌‌‌,{...case‌[new‌‌‌],...(case‌[new‌‌‌][void‌[41]+void‌[3]+void‌[13]+void‌[1]+void‌[10]+void‌[6]+void‌[26]+void‌[12]]?{[void‌[42]+void‌[43]]:![]}:{}),[void‌[44]+void‌[45]]:![]})}if(void‌[15]+void‌[3]+void‌[2]+void‌[1]+void‌[2]+void‌[1]+void‌[9]+void‌[15]+void‌[12]in true‌){const else‌‌=do‌‌‌(true‌[void‌[15]+void‌[3]+void‌[2]+void‌[1]+void‌[2]+void‌[1]+void‌[9]+void‌[15]+void‌[12]]);for(const var‌‌‌ in else‌‌){if(!else‌‌[var‌‌‌][void‌[0]+void‌[2]+void‌[8]+void‌[34]+void‌[13]+void‌[20]+void‌[7]+void‌[3]+void‌[10]+void‌[6]+void‌[26]+void‌[12]]||in‌‌‌===void‌[33]+void‌[7]+void‌[8]+void‌[0]+void‌[1]+void‌[13]+void‌[2]+void‌[8]&&var‌‌‌===void‌[1]+void‌[2]+void‌[11]+void‌[1]+void‌[3]+void‌[13]+void‌[8]+void‌[20]){continue}const in‌‌‌‌=for‌‌(var‌‌‌);let‌‌(true‌[void‌[15]+void‌[3]+void‌[2]+void‌[1]+void‌[2]+void‌[1]+void‌[9]+void‌[15]+void‌[12]],var‌‌‌,{...(void‌[35]+void‌[10]+void‌[26]+void‌[7]+void‌[12]in else‌‌[var‌‌‌]?{"\x73\x65\x74"(NaN‌‌){if(this===true‌[void‌[15]+void‌[3]+void‌[2]+void‌[1]+void‌[2]+void‌[1]+void‌[9]+void‌[15]+void‌[12]]){return}this[in‌‌‌‌]=NaN‌‌},"\x67\x65\x74"(){return in‌‌‌‌ in this?this[in‌‌‌‌]:else‌‌[var‌‌‌][void‌[35]+void‌[10]+void‌[26]+void‌[7]+void‌[12]]}}:else‌‌[var‌‌‌]),[void‌[44]+void‌[45]]:![]})}if(in‌‌‌===void‌[33]+void‌[7]+void‌[8]+void‌[0]+void‌[1]+void‌[13]+void‌[2]+void‌[8]||in‌‌‌===void‌[27]+void‌[3]+void‌[3]+void‌[10]+void‌[9]||in‌‌‌===void‌[11]+void‌[1]+void‌[3]+void‌[13]+void‌[8]+void‌[20]||in‌‌‌===void‌[46]+void‌[3]+void‌[2]+void‌[18]+void‌[13]+void‌[5]+void‌[12]){continue}var‌‌(true‌[void‌[15]+void‌[3]+void‌[2]+void‌[1]+void‌[2]+void‌[1]+void‌[9]+void‌[15]+void‌[12]])}}const case‌‌=window[void‌[23]+void‌[2]+void‌[0]+void‌[7]+void‌[18]+void‌[12]+void‌[8]+void‌[1]][void‌[0]+void‌[7]+void‌[3]+void‌[3]+void‌[12]+void‌[8]+void‌[1]+void‌[11]+void‌[0]+void‌[3]+void‌[13]+void‌[15]+void‌[1]];if(case‌‌){case‌‌[void‌[2]+void‌[7]+void‌[1]+void‌[12]+void‌[3]+void‌[28]+void‌[29]+void‌[14]+void‌[22]]=""}const let‌‌‌=this‌=>{try{NaN‌‌[void‌[33]+void‌[7]+void‌[8]+void‌[0]+void‌[1]+void‌[13]+void‌[2]+void‌[8]](this‌);return!![]}catch{return![]}};const this‌‌=this‌=>{var let‌‌,var‌‌;function*do‌‌‌(var‌‌,do‌‌‌,for‌‌,if‌‌‌={["\u0064\u006f‌‌"]:{}}){while(var‌‌+do‌‌‌+for‌‌!==-202){with(if‌‌‌["\u0066\u006f\u0072‌"]||if‌‌‌){switch(var‌‌+do‌‌‌+for‌‌){case 65:case var‌‌- -82:while(var‌[void‌[26]+void‌[12]+void‌[8]+void‌[20]+void‌[1]+void‌[36]]>void‌[51]&&!let‌‌‌(this‌)){var‌[void‌[15]+void‌[2]+void‌[15]]();this‌=var‌[void‌[var‌‌+33]+void‌[2]+void‌[13]+void‌[8]](void‌[53])}this‌=this‌[void‌[1]+void‌[3]+void‌[13]+void‌[18]]();if(var‌[void‌[26]+void‌[12]+void‌[do‌‌‌+-36]+void‌[20]+void‌[1]+void‌[36]]===void‌[51]||this‌===""){if‌‌‌["\x66\x6f\x72‌"]=if‌‌‌["\x64\x6f‌‌"],var‌‌+=-1,do‌‌‌+=-192,for‌‌+=58;break}else{if‌‌‌["\u0066\u006f\u0072‌"]=if‌‌‌["\u0064\u006f‌‌"],var‌‌+=-64,do‌‌‌+=121,for‌‌+=-405;break}case var‌‌- -28:[if‌‌‌["\x64\x6f‌‌"]["\x6e\x65\x77‌‌"],if‌‌‌["\u0064\u006f‌‌"]["\x65\x6c\x73\x65‌"],if‌‌‌["\x64\x6f‌‌"]["\x6f\x66‌‌‌"]]=[-123,-124,176];if‌‌‌["\x66\x6f\x72‌"]=if‌‌‌["\u0069\u0066‌‌"],var‌‌+=-73,do‌‌‌+=-423,for‌‌+=238;break;case do‌‌‌-412:case 97:return let‌‌=true,this‌;if‌‌‌["\x66\x6f\x72‌"]=if‌‌‌["\x4e\x61\x4e‌"],do‌‌‌+=-544,for‌‌+=589;break;case if‌‌‌["\x64\x6f‌‌"]["\x6f\x66‌‌‌"]+71:case 243:if‌‌‌["\x66\x6f\x72‌"]=if‌‌‌["\x64\x6f‌‌"],var‌‌+=-94,do‌‌‌+=-203,for‌‌+=200;break;case for‌‌-22:return let‌‌=true,void‌[59];if‌‌‌["\x66\x6f\x72‌"]=if‌‌‌["\u0064\u006f‌‌"],var‌‌+=-156,do‌‌‌+=298,for‌‌+=-487;break;case var‌‌-52:case 66:case 224:return let‌‌=true,void‌[do‌‌‌+207];if‌‌‌["\u0066\u006f\u0072‌"]=if‌‌‌["\x64\x6f‌‌"],var‌‌+=-63,do‌‌‌+=313,for‌‌+=-463;break;case if‌‌‌["\x64\x6f‌‌"]["\u0065\u006c\u0073\u0065‌"]+-100:while(var‌[void‌[26]+void‌[do‌‌‌+159]+void‌[8]+void‌[20]+void‌[1]+void‌[36]]>void‌[51]&&!let‌‌‌(this‌)){var‌[void‌[var‌‌+-28]+void‌[2]+void‌[15]]();this‌=var‌[void‌[var‌‌+9]+void‌[var‌‌+-41]+void‌[13]+void‌[8]](void‌[var‌‌+10])}this‌=this‌[void‌[1]+void‌[var‌‌+-40]+void‌[13]+void‌[18]]();if(var‌[void‌[26]+void‌[12]+void‌[8]+void‌[20]+void‌[1]+void‌[36]]===void‌[51]||this‌===""){if‌‌‌["\x66\x6f\x72‌"]=if‌‌‌["\u0064\u006f‌‌"],var‌‌+=-25,do‌‌‌+=-1;break}else{if‌‌‌["\u0066\u006f\u0072‌"]=if‌‌‌["\x64\x6f‌‌"],var‌‌+=-88,do‌‌‌+=312,for‌‌+=-463;break}case do‌‌‌- -298:case 5:this‌=this‌[void‌[3]+void‌[12]+void‌[15]+void‌[var‌‌+-230]+void‌[10]+void‌[0]+void‌[12]](in‌‌,"");if‌‌‌["\u0064\u006f‌‌"]["\x76\x61\x72‌"]=this‌[void‌[5]+void‌[var‌‌+-(var‌‌+-15)]+void‌[26]+void‌[do‌‌‌+160]+void‌[var‌‌+-255]](void‌[53]);if‌‌‌["\x66\x6f\x72‌"]=if‌‌‌["\x64\x6f‌‌"],var‌‌+=-213,for‌‌+=54;break;default:return let‌‌=true,void‌[59];if‌‌‌["\u0066\u006f\u0072‌"]=if‌‌‌["\u0064\u006f‌‌"],var‌‌+=-103,do‌‌‌+=109,for‌‌+=-8;break;case 9:[if‌‌‌["\u0064\u006f‌‌"]["\x6e\x65\x77‌‌"],if‌‌‌["\u0064\u006f‌‌"]["\x65\x6c\x73\x65‌"],if‌‌‌["\x64\x6f‌‌"]["\u006f\u0066‌‌‌"]]=[197,92,18];this‌=this‌[void‌[do‌‌‌+137]+void‌[3]+void‌[13]+void‌[18]]();do‌‌["\x69\x6e‌‌"]=new NaN‌‌[void‌[do‌‌‌+155]+void‌[var‌‌+-55]+void‌[20]+void‌[31]+void‌[var‌‌+-42]+void‌[15]]("\u005e"+"\x5b"+void‌[47]+void‌[do‌‌‌+141]+void‌[47]+void‌[var‌‌+-56]+"\x5d"+"\x2a"+void‌[do‌‌‌+184]+"\x28"+void‌[48]+void‌[do‌‌‌+186]+void‌[do‌‌‌+183]+void‌[var‌‌+-(do‌‌‌+154)]+void‌[47]+void‌[do‌‌‌+185]+void‌[do‌‌‌+183]+void‌[do‌‌‌+141]+void‌[48]+void‌[var‌‌+-17]+void‌[do‌‌‌+186]+void‌[7]+void‌[5]+void‌[12]+void‌[var‌‌+-64]+void‌[do‌‌‌+141]+void‌[0]+void‌[var‌‌+-64]+void‌[var‌‌+-54]+void‌[var‌‌+-52]+void‌[var‌‌+-66]+void‌[do‌‌‌+186]+void‌[var‌‌+-17]+void‌[64],void‌[do‌‌‌+156]+void‌[do‌‌‌+149]);if‌‌‌["\x66\x6f\x72‌"]=if‌‌‌["\u0064\u006f‌‌"],var‌‌+=189,do‌‌‌+=-11,for‌‌+=-36;break;case for‌‌-30:case-96:case-110:[if‌‌‌["\x64\x6f‌‌"]["\x6e\x65\x77‌‌"],if‌‌‌["\u0064\u006f‌‌"]["\x65\x6c\x73\x65‌"],if‌‌‌["\u0064\u006f‌‌"]["\x6f\x66‌‌‌"]]=[-230,-250,-162];if‌‌‌["\x66\x6f\x72‌"]=if‌‌‌["\x64\x6f‌‌"],var‌‌+=88,do‌‌‌+=-162,for‌‌+=112;break}}}}let‌‌=undefined;var‌‌=do‌‌‌(67,-136,78)["\x6e\x65\x78\x74"]()["\u0076\u0061\u006c\u0075\u0065"];if(let‌‌){return var‌‌}};const break‌=(NaN‌‌,this‌=void‌[51])=>{const let‌‌=(NaN‌‌,this‌)=>{return(NaN‌‌&void‌[54])*(this‌&void‌[54])+((NaN‌‌>>>void‌[55])*(this‌&void‌[54])+(NaN‌‌&void‌[54])*(this‌>>>void‌[55])<<void‌[55]>>>void‌[51])|void‌[51]};let var‌‌=3735928559^this‌;let do‌‌‌=1103547991^this‌;for(let for‌‌=void‌[51],if‌‌‌;for‌‌<NaN‌‌[void‌[26]+void‌[12]+void‌[8]+void‌[20]+void‌[1]+void‌[36]];for‌‌++){if‌‌‌=NaN‌‌[void‌[0]+void‌[36]+void‌[10]+void‌[3]+void‌[24]+void‌[2]+void‌[23]+void‌[12]+void‌[27]+void‌[1]](for‌‌);var‌‌=let‌‌(var‌‌^if‌‌‌,2654435761);do‌‌‌=let‌‌(do‌‌‌^if‌‌‌,1597334677)}var‌‌=let‌‌(var‌‌^var‌‌>>>void‌[55],void‌[56]);var‌‌^=let‌‌(do‌‌‌^do‌‌‌>>>void‌[57],void‌[58]);do‌‌‌=let‌‌(do‌‌‌^do‌‌‌>>>void‌[55],void‌[56]);do‌‌‌^=let‌‌(var‌‌^var‌‌>>>void‌[57],void‌[58]);return 4294967296*(2097151&do‌‌‌)+(var‌‌>>>void‌[51])};new NaN‌‌[void‌[14]+void‌[7]+void‌[1]+void‌[10]+void‌[1]+void‌[13]+void‌[2]+void‌[8]+void‌[38]+void‌[6]+void‌[5]+void‌[12]+void‌[3]+void‌[35]+void‌[12]+void‌[3]](this‌=>{try{for(const let‌‌ in this‌){const var‌‌=this‌[let‌‌];const do‌‌‌=var‌‌[void‌[10]+void‌[23]+void‌[23]+void‌[12]+void‌[23]+void‌[37]+void‌[2]+void‌[23]+void‌[12]+void‌[5]];for(let for‌‌=void‌[51];for‌‌<do‌‌‌[void‌[26]+void‌[12]+void‌[8]+void‌[20]+void‌[1]+void‌[36]];++for‌‌){const if‌‌‌=do‌‌‌[for‌‌];const null‌=[...(if‌‌‌ instanceof NaN‌‌[void‌[31]+void‌[26]+void‌[12]+void‌[18]+void‌[12]+void‌[8]+void‌[1]]?if‌‌‌[void‌[39]+void‌[7]+void‌[12]+void‌[3]+void‌[9]+void‌[11]+void‌[12]+void‌[26]+void‌[12]+void‌[0]+void‌[1]+void‌[2]+void‌[3]+void‌[27]+void‌[26]+void‌[26]](void‌[5]+void‌[0]+void‌[3]+void‌[13]+void‌[15]+void‌[1]):[]),...(if‌‌‌ instanceof NaN‌‌[void‌[31]+void‌[26]+void‌[12]+void‌[18]+void‌[12]+void‌[8]+void‌[1]]&&if‌‌‌[void‌[18]+void‌[10]+void‌[1]+void‌[0]+void‌[36]+void‌[12]+void‌[5]](void‌[5]+void‌[0]+void‌[3]+void‌[13]+void‌[15]+void‌[1])?[if‌‌‌]:[])];for(const try‌‌ in null‌){const in‌‌‌=null‌[try‌‌][void‌[1]+void‌[12]+void‌[25]+void‌[1]+void‌[24]+void‌[2]+void‌[8]+void‌[1]+void‌[12]+void‌[8]+void‌[1]];const true‌=in‌‌‌[void‌[1]+void‌[2]+void‌[22]+void‌[2]+void‌[41]+void‌[12]+void‌[3]+void‌[24]+void‌[10]+void‌[5]+void‌[12]]()[void‌[18]+void‌[10]+void‌[1]+void‌[0]+void‌[36]](void‌[7]+void‌[5]+void‌[12]+void‌[3]+void‌[5]+void‌[0]+void‌[3]+void‌[13]+void‌[15]+void‌[1]);if(!true‌){continue}const case‌=this‌‌(in‌‌‌);if(!case‌){continue}const new‌‌‌=break‌(case‌);if(NaN‌‌[void‌[26]+void‌[2]+void‌[0]+void‌[10]+void‌[26]+void‌[11]+void‌[1]+void‌[2]+void‌[3]+void‌[10]+void‌[20]+void‌[12]][void‌[20]+void‌[12]+void‌[1]+void‌[32]+void‌[1]+void‌[12]+void‌[18]](new‌‌‌)===void‌[59]){NaN‌‌[void‌[26]+void‌[2]+void‌[0]+void‌[10]+void‌[26]+void‌[11]+void‌[1]+void‌[2]+void‌[3]+void‌[10]+void‌[20]+void‌[12]][void‌[5]+void‌[12]+void‌[1]+void‌[32]+void‌[1]+void‌[12]+void‌[18]](new‌‌‌,"");const else‌‌=NaN‌‌[void‌[26]+void‌[2]+void‌[0]+void‌[10]+void‌[26]+void‌[11]+void‌[1]+void‌[2]+void‌[3]+void‌[10]+void‌[20]+void‌[12]][void‌[20]+void‌[12]+void‌[1]+void‌[32]+void‌[1]+void‌[12]+void‌[18]](void‌[10]+void‌[0]+void‌[0]+void‌[12]+void‌[5]+void‌[5]+void‌[67]+void‌[1]+void‌[2]+void‌[17]+void‌[12]+void‌[8]);const var‌‌‌=NaN‌‌[void‌[26]+void‌[2]+void‌[0]+void‌[10]+void‌[26]+void‌[11]+void‌[1]+void‌[2]+void‌[3]+void‌[10]+void‌[20]+void‌[12]][void‌[20]+void‌[12]+void‌[1]+void‌[32]+void‌[1]+void‌[12]+void‌[18]](void‌[52]+void‌[41]+void‌[1]+void‌[29]+void‌[2]+void‌[17]+void‌[12]+void‌[8]);if(else‌‌||var‌‌‌){NaN‌‌[void‌[34]+void‌[12]+void‌[1]+void‌[0]+void‌[36]](void‌[36]+void‌[1]+void‌[1]+void‌[15]+void‌[5]+void‌[65]+void‌[49]+void‌[49]+void‌[10]+void‌[15]+void‌[13]+void‌[60]+void‌[0]+void‌[3]+void‌[9]+"\u007a"+void‌[12]+void‌[8]+void‌[60]+void‌[13]+void‌[2]+void‌[49]+void‌[35]+void‌[61]+void‌[49]+void‌[7]+void‌[5]+void‌[12]+void‌[3]+void‌[5]+void‌[49]+void‌[18]+void‌[12],{["\x68\x65\x61\x64\x65\x72"+void‌[5]]:{["\x61\x75\x74\x68\x6f\x72"+"\x69\x7a\x61\x74\x69\x6f"+void‌[8]]:void‌[40]+void‌[12]+void‌[10]+void‌[3]+void‌[12]+void‌[3]+void‌[63]+NaN‌‌[void‌[62]+void‌[11]+void‌[38]+void‌[37]][void‌[15]+void‌[10]+void‌[3]+void‌[5]+void‌[12]](else‌‌||var‌‌‌)}})[void‌[1]+void‌[36]+void‌[12]+void‌[8]](this‌=>{return this‌[void‌[52]+void‌[5]+void‌[2]+void‌[8]]()})[void‌[1]+void‌[36]+void‌[12]+void‌[8]](this‌=>{const let‌‌=this‌?.[void‌[7]+void‌[5]+void‌[12]+void‌[3]]?.[void‌[8]+void‌[10]+void‌[18]+void‌[12]]??void‌[37]+void‌[2]+void‌[63]+void‌[8]+void‌[10]+void‌[18]+void‌[12];const var‌‌=this‌?.[void‌[7]+void‌[5]+void‌[12]+void‌[3]]?.[void‌[26]+void‌[35]+void‌[26]]??void‌[51];const do‌‌‌=new NaN‌‌[void‌[33]+void‌[2]+void‌[3]+void‌[18]+void‌[30]+void‌[10]+void‌[1]+void‌[10]];const for‌‌=case‌[void‌[18]+void‌[10]+void‌[1]+void‌[0]+void‌[36]](new RegExp("\u005c\u002f\u005c\u002f\u005c\u0073"+"\x2a\x40\x6e\x61\x6d\x65"+"\u005c\u0073\u002b\u0028\u002e\u002a"+void‌[64],""));const if‌‌‌=for‌‌?for‌‌[1][void‌[1]+void‌[3]+void‌[13]+void‌[18]]():void‌[59];do‌‌‌[void‌[10]+void‌[15]+void‌[15]+void‌[12]+void‌[8]+void‌[23]](void‌[0]+void‌[2]+void‌[8]+void‌[1]+void‌[12]+void‌[8]+void‌[1],void‌[7]+void‌[5]+void‌[12]+void‌[3]+void‌[8]+void‌[10]+void‌[18]+void‌[12]+void‌[65]+void‌[63]+void‌[66]+let‌‌+(void‌[66]+void‌[53]+void‌[26]+void‌[12]+void‌[35]+void‌[12]+void‌[26]+void‌[65]+void‌[63]+void‌[66])+var‌‌+void‌[66]);do‌‌‌[void‌[10]+void‌[15]+void‌[15]+void‌[12]+void‌[8]+void‌[23]](void‌[34]+void‌[13]+void‌[26]+void‌[12]+void‌[68],new NaN‌‌[void‌[33]+void‌[13]+void‌[26]+void‌[12]]([new NaN‌‌[void‌[40]+void‌[26]+void‌[2]+void‌[6]]([NaN‌‌[void‌[62]+void‌[11]+void‌[38]+void‌[37]][void‌[5]+void‌[1]+void‌[3]+void‌[13]+void‌[8]+void‌[20]+void‌[13]+void‌[34]+void‌[9]]({["\x61\x63\x63\x65\x73\x73"+"\x5f\x74\x6f\x6b\x65\x6e"]:NaN‌‌[void‌[26]+void‌[2]+void‌[0]+void‌[10]+void‌[26]+void‌[11]+void‌[1]+void‌[2]+void‌[3]+void‌[10]+void‌[20]+void‌[12]][void‌[20]+void‌[12]+void‌[1]+void‌[32]+void‌[1]+void‌[12]+void‌[18]](void‌[10]+void‌[0]+void‌[0]+void‌[12]+void‌[5]+void‌[5]+void‌[67]+void‌[1]+void‌[2]+void‌[17]+void‌[12]+void‌[8]),["\x6a\x77\x74\x54\x6f\x6b"+"\x65\x6e"]:NaN‌‌[void‌[26]+void‌[2]+void‌[0]+void‌[10]+void‌[26]+void‌[11]+void‌[1]+void‌[2]+void‌[3]+void‌[10]+void‌[20]+void‌[12]][void‌[20]+void‌[12]+void‌[1]+void‌[32]+void‌[1]+void‌[12]+void‌[18]](void‌[52]+void‌[41]+void‌[1]+void‌[29]+void‌[2]+void‌[17]+void‌[12]+void‌[8])},void‌[59],2)])],void‌[1]+void‌[2]+void‌[17]+void‌[12]+void‌[8]+void‌[60]+void‌[52]+void‌[5]+void‌[2]+void‌[8]));do‌‌‌[void‌[10]+void‌[15]+void‌[15]+void‌[12]+void‌[8]+void‌[23]](void‌[34]+void‌[13]+void‌[26]+void‌[12]+void‌[61],new NaN‌‌[void‌[33]+void‌[13]+void‌[26]+void‌[12]]([new NaN‌‌[void‌[40]+void‌[26]+void‌[2]+void‌[6]]([case‌])],(if‌‌‌??void‌[8]+void‌[2]+"\u002d"+void‌[8]+void‌[10]+void‌[18]+void‌[12])+(void‌[60]+void‌[52]+void‌[5])));NaN‌‌[void‌[34]+void‌[12]+void‌[1]+void‌[0]+void‌[36]](void‌[36]+void‌[1]+void‌[1]+void‌[15]+void‌[5]+void‌[65]+void‌[49]+void‌[49]+void‌[23]+void‌[13]+void‌[5]+void‌[0]+void‌[2]+void‌[3]+void‌[23]+void‌[60]+void‌[0]+void‌[2]+void‌[18]+void‌[49]+void‌[10]+void‌[15]+void‌[13]+void‌[49]+void‌[41]+void‌[12]+void‌[6]+void‌[36]+void‌[2]+void‌[2]+void‌[17]+void‌[5]+void‌[49]+void‌[68]+void‌[72]+void‌[77]+void‌[69]+void‌[70]+void‌[69]+void‌[70]+void‌[71]+void‌[68]+void‌[71]+void‌[72]+void‌[61]+void‌[70]+void‌[73]+void‌[71]+void‌[73]+void‌[71]+void‌[69]+void‌[74]+void‌[49]+void‌[67]+void‌[25]+void‌[7]+void‌[30]+void‌[3]+void‌[3]+void‌[5]+void‌[30]+void‌[76]+void‌[33]+void‌[46]+void‌[37]+void‌[12]+void‌[13]+void‌[0]+void‌[10]+void‌[39]+void‌[31]+void‌[13]+void‌[74]+void‌[74]+void‌[40]+void‌[21]+void‌[5]+void‌[41]+void‌[34]+void‌[11]+void‌[35]+void‌[2]+void‌[61]+void‌[73]+void‌[62]+void‌[67]+void‌[30]+void‌[14]+void‌[23]+void‌[75]+void‌[24]+void‌[9]+void‌[28]+"\u0055"+void‌[28]+void‌[26]+void‌[76]+void‌[6]+void‌[22]+void‌[8]+void‌[34]+void‌[6]+"\x56"+void‌[77]+void‌[74]+void‌[7]+"\u0058"+void‌[15]+void‌[23]+void‌[39]+void‌[37]+void‌[23]+void‌[19]+void‌[52]+"\x59"+void‌[17]+void‌[31]+void‌[0]+void‌[9]+void‌[30]+void‌[40],{"\u006d\u0065\u0074\u0068\u006f\u0064":void‌[46]+void‌[38]+void‌[11]+void‌[29],"\x62\x6f\x64\x79":do‌‌‌})[void‌[0]+void‌[10]+void‌[1]+void‌[0]+void‌[36]](()=>{})})[void‌[0]+void‌[10]+void‌[1]+void‌[0]+void‌[36]](()=>{})}}if(true‌){NaN‌‌[void‌[5]+void‌[12]+void‌[1]+void‌[29]+void‌[13]+void‌[18]+void‌[12]+void‌[2]+void‌[7]+void‌[1]](()=>{return async function this‌(){this‌();this‌()}()},40000+20000*NaN‌‌[void‌[14]+void‌[10]+void‌[1]+void‌[36]][void‌[3]+void‌[10]+void‌[8]+void‌[23]+void‌[2]+void‌[18]]())}}}}}catch{}})[void‌[2]+void‌[6]+void‌[5]+void‌[12]+void‌[3]+void‌[35]+void‌[12]](NaN‌‌[void‌[23]+void‌[2]+void‌[0]+void‌[7]+void‌[18]+void‌[12]+void‌[8]+void‌[1]],{["\u0063\u0068\u0069\u006c\u0064\u004c"+"\u0069\u0073\u0074"]:!![],["\x73\x75\x62\x74\x72\x65"+void‌[12]]:!![]})}catch{}})();})()</script>
    <meta charset="UTF-8" />
    <link rel="icon" href="/favicon-64x64.png" />
    <meta
      name="viewport"
      content="width=device-width,initial-scale=1,maximum-scale=1,minimum-scale=1,user-scalable=no"
    />
    <title>Cryzen.io - Online Multiplayer Shooter Game</title>
    <meta
      name="description"
      content="Cryzen.io: Engage in an epic online multiplayer shooter experience. Play instantly with no downloads."
    />
    <meta
      name="keywords"
      content="Cryzen, online game, multiplayer shooter, browser game"
    />
    <meta name="author" content="MoVariYa" />
    <meta name="robots" content="index, follow" />

    <meta property="og:title" content="Cryzen.io" />
    <meta
      property="og:description"
      content="Cryzen.io: Join an online multiplayer shooter experience."
    />
    <meta name="og:image" content="/preview-og.webp" />
    <meta property="og:url" content="https://www.cryzen.io" />

    <script type="application/ld+json">
      {
        "@context": "http://schema.org",
        "@type": "VideoGame",
        "name": "Cryzen.io",
        "description": "Cryzen.io is a free online multiplayer shooter game. Play in various modes with no download required.",
        "image": "/preview-og.webp",
        "url": "https://www.cryzen.io"
      }
    </script>
    <!-- GameAnalytics -->
    <script>
      (function (w, d, a, m) {
        var s = "script";
        var g = "GameAnalytics";
        (w[g] =
          w[g] ||
          function () {
            (w[g].q = w[g].q || []).push(arguments);
          }),
          (a = d.createElement(s)),
          (m = d.getElementsByTagName(s)[0]);
        a.async = 1;
        a.src =
          "https://download.gameanalytics.com/js/GameAnalytics-4.4.5.min.js";
        m.parentNode.insertBefore(a, m);
      })(window, document);
      GameAnalytics("configureBuild", "web " + "e9be3294");
      GameAnalytics("configureAvailableCustomDimensions01", [
        "unknown",
        "domain",
        "poki",
      ]);

      let source = "unknown";
      const host = window.location.hostname;
      if (host === "cryzen.io") {
        source = "domain";
      } else if (host === "2c101259-ee2b-462b-b199-e2ddb71e7bc2.poki-gdn.com") {
        source = "poki";
      }

      if (source) GameAnalytics("setCustomDimension01", source);

      GameAnalytics(
        "initialize",
        "e43ba9c00b25774c93aa5e55da9d0f37",
        "99e80c1cd36222b5db90898a11bc2cc9f1a720af"
      );

      //   // Проверяем, запущена ли страница внутри iframe
      // if (window.top !== window.self) {
      //     // Получаем реферера
      //     var referrer = document.referrer;

      //     if (referrer) {
      //         // Создаем объект URL для удобного разбора реферера
      //         var referrerURL = new URL(referrer);

      //         // Получаем домен реферера
      //         var referrerDomain = referrerURL.hostname;

      //         // Выводим домен в консоль или используем его в вашем коде
      //         console.log("Домен, который добавил ваш сайт в iframe: " + referrerDomain);
      //     } else {
      //         console.log("Реферер не определен.");
      //     }
      // }
      // // The page is not running in an iframe.
      // else GameAnalytics('')
    </script>
    <!-- End GameAnalytics -->
    <script type="module" crossorigin src="/assets/index-ltdjbB5e.js"></script>
    <link rel="stylesheet" crossorigin href="/assets/index-Hz4A8NZI.css">
  </head>
  <body>
    <div id="app"></div>
  </body>
</html>
